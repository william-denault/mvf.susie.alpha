% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_multfsusie.R
\name{plot_effect_multfsusiF}
\alias{plot_effect_multfsusiF}
\title{Plot specific effect from susiF object}
\usage{
plot_effect_multfsusiF(
  multfsusie.obj,
  effect = 1,
  lfsr_thresh = 0.05,
  title = "",
  cred.band = TRUE,
  lfsr.curve = TRUE,
  size_line = 2,
  size_point = 4,
  pos_SNP,
  pip_only = FALSE,
  point_shape,
  ...
)
}
\arguments{
\item{multfsusie.obj}{output of the susiF function}

\item{effect}{the index of the effect to be plotted}

\item{lfsr_thresh}{numeric, threshold for the lfsr curve, set to 0.0 by default.}

\item{title}{character}

\item{cred.band}{logical, if TRUE, plot credible bands if
susiF.obj fitted with wavelets regression. Set as TRUE by default.}

\item{lfsr.curve}{logical, if TRUE, plot estimated lfsr of
the effect at each base pair  if susiF.obj fitted with HMM regression.
 Set as TRUE by default.}

\item{size_line}{numeric, width of the plotted lines.}

\item{size_point}{numeric, size of the point.}

\item{pos_SNP}{vector, containing the base pair of the SNPs.}

\item{pip_only}{logical, if TRUE, plot only the pip values. Set as FALSE by default.}

\item{point_shape}{vector, containing the shape of dots.}

\item{\dots}{Other arguments..}
}
\description{
Plot specific effect from susiF object
}
\examples{
library(mvf.susie.alpha)
set.seed(1)

N <- 100 # Sample size
P <- 100 # Number of SNPs
L <- 2 # Number of effects
list_lev_res <- list(5, 6)
# Two functional phenotypes, one of length 2^5 and one of length 2^6
n_univ <- 3 # 3 univariate phenotypes
eff <- list()
for (l in 1:L) { # Simulate the multi-trait effect
  eff[[l]] <- simu_effect_multfsusie(list_lev_res=list_lev_res,
                                     n_univ=n_univ, output_level=2)
}

Y_f1 <- matrix(rnorm((2^list_lev_res[[1]]) * N, sd=1), nrow=N)
Y_f2 <- matrix(rnorm((2^list_lev_res[[2]]) * N, sd=1), nrow=N)
Y_u <- matrix(rnorm(n_univ * N, sd=1), nrow=N)
# Genotype matrix
G <- matrix(sample(c(0, 1, 2), size=N*P, replace=TRUE), nrow=N, ncol=P)

true_pos <- sample(1:ncol(G), L) # Actually causal columns/SNPs

for (i in 1:N) {
  for (l in 1:L) {
    Y_f1[i,] <- Y_f1[i,] + eff[[l]]$func_effect[[1]]$sim_func * G[i, true_pos[[l]]]
    Y_f2[i,] <- Y_f2[i,] + eff[[l]]$func_effect[[2]]$sim_func * G[i, true_pos[[l]]]
    Y_u[i,]  <- Y_u[i,]  + eff[[l]]$univ_effect * G[i, true_pos[[l]]]
  }
}

Y_f <- list(Y_f1, Y_f2)
Y <- list(Y_f=Y_f, Y_u=Y_u) # Preparing data

pos <- list(pos1=1:ncol(Y$Y_f[[1]]), pos2=1:ncol(Y$Y_f[[2]]))
# If your signal is sampled between 1 and 64

m1 <- multfsusie(Y=Y, X=G, pos=pos, L=3)
plot_effect_multfsusiF(m1, effect=1, title="Effect 1")
plot_effect_multfsusiF(m1, effect=1, title="Effect 2")
}
