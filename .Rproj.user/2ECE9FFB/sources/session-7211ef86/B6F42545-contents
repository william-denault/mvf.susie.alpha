create_dummy_susiF <- function( multfsusie.obj   ){



  G_prior <- list()
  class(G_prior) <- "mixture_normal_per_scale"
  susiF.obj <- list(cs=multfsusie.obj$cs ,
                    G_prior = G_prior,
                    alpha= multfsusie.obj$alpha,
                    csd_X= multfsusie.obj$csd_X
  )




  return( susiF.obj)
}





TI_regression.multfsusie<- function(multfsusie.obj,
                                    Y,
                                    X, verbose=TRUE,
                                    filter.number = 10,
                                    family = "DaubLeAsymm"  ){

  if(verbose){
    print( "Fine mapping done, refining effect estimates using cylce spinning wavelet transform")
  }

  dummy_susiF.obj <- create_dummy_susiF(multfsusie.obj)

  for ( k in 1: length(Y$Y_f)){

    susiF.obj <- susiF.alpha::TI_regression( susiF.obj     = dummy_susiF.obj,
                                             Y             = Y$Y_f[[k]],
                                             X             = X,
                                             verbose       = FALSE,
                                             filter.number = filter.number,
                                             family        = family   )

    for ( l in 1:length(multfsusie.obj$cs)){

      multfsusie.obj$fitted_func[[l]][[k]] <-susiF.obj$fitted_func[[k]]

    }

  }

  return(multfsusie.obj)
}



